# Global variables
export STS_ENV_HOME="${STS_ENV_HOME:-$HOME/env}"
export STS_KNOWLEDGE_HOME="${STS_KNOWLEDGE_HOME:-$HOME/knowledge}"
export STS_VMS_HOME="${STS_VMS_HOME:-$HOME/vms}"
export STS_SERVICES_HOME="${STS_SERVICES_HOME:-$HOME/services}"
export STS_OSS_HOME="${STS_OSS_HOME:-$HOME/oss}"
export STS_OPT_HOME="${STS_OPT_HOME:-$HOME/opt}"
export STS_SANDBOX_HOME="${STS_SANDBOX_HOME:-$HOME/sandbox}"
export STS_WORKSPACE_HOME="${STS_WORKSPACE_HOME:-$HOME/workspace}"

# Convenience path variable
local STS_ENV_CONFIGS="$STS_ENV_HOME/configs"
local STS_ENV_CONFIGS_ZSH="$STS_ENV_CONFIGS/zsh"
local STS_ENV_ZSH_APPLICATIONS="$STS_ENV_CONFIGS_ZSH/applications"
local STS_ENV_LIBRARIES="$STS_ENV_HOME/libraries"

# Usage: load_library LIBRARY_NAME
#   This will autoload all functions in the folder
#   $STS_ENV_LIBRARIES/$LIBRARY_PATH, unless $STS_LIB_DISABLE_[LIBRARY_PATH]
#   has been set.
load_library() {

  # Check to see if the library directory exists
  local lib_path="$1"
  if [[ ! -d "$lib_path" ]]; then
    echo "$lib_path does not exist"
    return 1
  fi

  # Check if the library has been disabled from loading
  local override_var="STS_LIB_DISABLE_${lib_path:t:r}"
  # TODO: can the below be cleaner?
  # FIXME: this is actually not working
  # if [[ -n $"${override_var}" ]]; then
  #   echo "Skipped autoloading functions from $lib_path. ${override_var} is set"
  #   return 1
  # fi

  # So globbing doesn't throw errors for empty directories, which stops
  # zsh from running
  setopt localoptions nullglob

  # Update fpath and autoload all the zsh scripts in the provided directory
  fpath=("$lib_path" $fpath)
  for file in "$lib_path"/*; do
    autoload -Uz "${file:t:r}"
  done
}

# Load all libraries
for dir in "$STS_ENV_LIBRARIES"/*; do
  load_library "$dir"
done

# Load all application specific env configurations
# They must be placed in a file called env.zsh in $STS_ENV_ZSH_APPLICATIONS
for app_env_config in "$STS_ENV_ZSH_APPLICATIONS"/**/env.zsh; do
  . "$app_env_config" &> /dev/null
done